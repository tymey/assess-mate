generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  username  String      @unique
  password  String // Hashed
  name      String
  email     String
  students  Student[]
  rubrics   Rubric[]
  ai        TeacherAi[]
  createdAt DateTime    @default(now())
}

model Student {
  id        String       @id @default(uuid())
  user      User         @relation(fields: [userId], references: [id])
  userId    String
  name      String
  tests     Assessment[]
  createdAt DateTime     @default(now())
}

model Assessment {
  id        String           @id @default(uuid())
  student   Student          @relation(fields: [studentId], references: [id])
  studentId String
  pdfUrl    String
  gradedAt  DateTime?
  sessions  GradingSession[]
}

model Rubric {
  id              String           @id @default(uuid())
  user            User             @relation(fields: [userId], references: [id])
  userId          String
  questionNum     Int
  criteria        Json // JSON array of weighted items
  sharedName      String? // For reusable templates
  gradedQuestions GradedQuestion[]
}

model GradingSession {
  id           String           @id @default(uuid())
  assessment   Assessment       @relation(fields: [assessmentId], references: [id])
  assessmentId String
  createdAt    DateTime         @default(now())
  questions    GradedQuestion[]
}

model GradedQuestion {
  id               String         @id @default(uuid())
  gradingSession   GradingSession @relation(fields: [gradingSessionId], references: [id])
  gradingSessionId String

  questionNum Int
  rubric      Rubric @relation(fields: [rubricId], references: [id])
  rubricId    String

  boxedAnswer String
  studentWork String

  aiScore         Int
  aiFeedback      String
  teacherScore    Int?
  teacherFeedback String?
  alignmentScore  Int? // 1-10 rating of AI alignment
  createdAt       DateTime @default(now())
}

model TeacherAi {
  id          String @id @default(uuid())
  user        User   @relation(fields: [userId], references: [id])
  userId      String @unique
  toneContext String
}
